<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>openstack on chhanz 기술 블로그
</title>
    <link>https://chhanz88.github.io/post/categories/openstack/</link>
    <description>Recent content in openstack on chhanz 기술 블로그
</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://chhanz88.github.io/post/categories/openstack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[OpenStack] [Preview] OpenStack Dashboard - Skyline</title>
      <link>https://chhanz88.github.io/post/post/2022-01-17-openstack-dashboard-skyline/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://chhanz88.github.io/post/post/2022-01-17-openstack-dashboard-skyline/</guid>
      <description>흥미 최근 OpenStack 커뮤니티 그룹에서 올라온 글을 보고 기존에 Horizon 의 약한 부분에 대해 매우 아쉬움을 가지고 있던 저는 매우 흥미를 느끼며 이 포스팅을 작성하게 되었습니다.
 * 흥미로운 소식 : [https://www.facebook.com/photo/?fbid=10166019386805577&amp;set=gm.5334637036550404](https://www.facebook.com/photo/?fbid=10166019386805577&amp;set=gm.5334637036550404) Preview 이 흥미로운 Project 는 Skyline 이라는 이름의 새로운 OpenStack Dashboard Project 입니다.
(https://wiki.openstack.org/wiki/Skyline#Description)
Install 테스트에 활용된 OpenStack 환경은 아래와 같습니다.
* OpenStack wallaby (all-in-one version) [deploy tool `kolla-ansible`] * ubuntu 20.04 Skyline 에서 사용될 User 를 생성합니다.</description>
    </item>
    
    <item>
      <title>[OpenStack] kolla-ansible 을 이용하여 OpenStack multinode 배포 (wallaby)</title>
      <link>https://chhanz88.github.io/post/post/2021-10-22-deploy-osp-wallaby-kolla-ansible/</link>
      <pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chhanz88.github.io/post/post/2021-10-22-deploy-osp-wallaby-kolla-ansible/</guid>
      <description>kolla-ansible 이란? Kolla-Ansible 은 Docker 컨테이너에 OpenStack 서비스 및 인프라 구성 요소를 배포하는 Tool 이며, OpenStack 클라우드 운영을 위한 프로덕션 준비 컨테이너 및 배포 도구를 제공합니다.
deploy openstack venv 환경 설정 python venv 환경을 아래와 같이 생성합니다.
root@u-node-0:~# python3 -m venv osp root@u-node-0:~# . osp/bin/activate requirement module 설치 (osp) root@u-node-0:~# pip install -U pip (osp) root@u-node-0:~# pip install &amp;#39;ansible&amp;lt;3.0&amp;#39; kolla-ansible 설치 (osp) root@u-node-0:~# pip install kolla-ansible kolla-ansible config 아래와 같이 config 및 inventory template 를 copy 하고 ansible 설정을 합니다.</description>
    </item>
    
    <item>
      <title>[OpenStack] kolla-build 를 이용한 kolla image build (wallaby)</title>
      <link>https://chhanz88.github.io/post/post/2021-10-21-kolla-build/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chhanz88.github.io/post/post/2021-10-21-kolla-build/</guid>
      <description>Registry kolla-build 를 통해 생성한 이미지를 저장할 사설 Registry 를 만든다.
deploy registry 아래와 같이 배포 진행한다.
(osp) root@u-node-0:/etc/kolla# docker run -d -p 4000:5000 --name registry -v /etc/kolla/build:/var/lib/registry registry:2 아래와 같이 insecure-registries 를 설정한다.
추가로 kolla-image 를 pull 받을 node 들도 동일하게 설정을 한다.
(osp) root@u-node-0:/etc/docker# cat /etc/docker/daemon.json {  &amp;#34;insecure-registries&amp;#34; : [&amp;#34;10.10.10.10:4000&amp;#34;] } (osp) root@u-node-0:/etc/docker# Install kolla-build kolla-build 를 사용하기 위해 아래와 같이 pip module 을 설치합니다.
(osp) root@u-node-0:/etc/kolla# pip install kollaCollecting kolla  Downloading kolla-12.</description>
    </item>
    
  </channel>
</rss>
